local widget = require( "widget" )
local composer = require( "composer" )
local json = require ("json")
local myData = require ("mydata")
local upgrades = require("upgradeName")
local exploitAttackScene = composer.newScene()
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
--> GENERAL FUNCTIONS
---------------------------------------------------------------------------------
local close = function(event)
    composer.hideOverlay( "fade", 400 )
end

---------------------------------------------------------------------------------
--> SCENE EVENTS
---------------------------------------------------------------------------------
--  Scene Creation
function exploitAttackScene:create(event)
    group = self.view
    local params = event.params

    iconSize=fontSize(250)

    myData.exploitRect = display.newRoundedRect( 40, params.top-fontSize(245), display.contentWidth-70, display.actualContentHeight /4+5, 12 )
    myData.exploitRect.anchorX = 0
    myData.exploitRect.anchorY = 0
    myData.exploitRect.strokeWidth = 5
    myData.exploitRect:setFillColor( 0,0,0 )
    myData.exploitRect:setStrokeColor( 0, 0.7, 0 )
    myData.exploitRect.alpha = 1

    -- Web Server
    myData.webExploit = display.newImageRect( "img/web-server.png",iconSize,iconSize )
    myData.webExploit.anchorX = 0
    myData.webExploit.anchorY = 0
    myData.webExploit.x, myData.webExploit.y = iconSize/2 - 40, myData.exploitRect.y+fontSize(130)
    myData.webText = display.newText(event.params.webChance.."%",myData.webExploit.x+30,myData.webExploit.y+iconSize ,native.systemFont, fontSize(80))
    myData.webText.anchorX = 0
    myData.webText.anchorY = 0
    if (event.params.webChance == "??") then myData.webText:setFillColor( 0.7,0,0 )
    elseif (tonumber(event.params.webChance) > 66) then myData.webText:setFillColor( 0,0.7,0 ) 
    elseif (tonumber(event.params.webChance) > 33) then myData.webText:setFillColor( 0.7,0.7,0 ) 
    else myData.webText:setFillColor( 0.7,0,0 ) end

    -- App Server
    myData.appExploit = display.newImageRect( "img/application-server.png",iconSize,iconSize )
    myData.appExploit.anchorX = 0
    myData.appExploit.anchorY = 0
    myData.appExploit.x, myData.appExploit.y = myData.webExploit.x+iconSize+80, myData.webExploit.y
    myData.appText = display.newText(event.params.appChance.."%",myData.appExploit.x+30,myData.appExploit.y+iconSize ,native.systemFont, fontSize(80))
    myData.appText.anchorX = 0
    myData.appText.anchorY = 0
    if (event.params.appChance == "??") then myData.appText:setFillColor( 0.7,0,0 )
    elseif (tonumber(event.params.appChance) > 66) then myData.appText:setFillColor( 0,0.7,0 ) 
    elseif (tonumber(event.params.appChance) > 33) then myData.appText:setFillColor( 0.7,0.7,0 ) 
    else myData.appText:setFillColor( 0.7,0,0 ) end

    -- DB Server
    myData.dbExploit = display.newImageRect( "img/db-server.png",iconSize,iconSize )
    myData.dbExploit.anchorX = 0
    myData.dbExploit.anchorY = 0
    myData.dbExploit.x, myData.dbExploit.y = myData.appExploit.x+iconSize+80, myData.webExploit.y
    myData.dbText = display.newText(event.params.dbChance.."%",myData.dbExploit.x+30,myData.dbExploit.y+iconSize ,native.systemFont, fontSize(80))
    myData.dbText.anchorX = 0
    myData.dbText.anchorY = 0
    if (event.params.dbChance == "??") then myData.dbText:setFillColor( 0.7,0,0 )
    elseif (tonumber(event.params.dbChance) > 66) then myData.dbText:setFillColor( 0,0.7,0 ) 
    elseif (tonumber(event.params.dbChance) > 33) then myData.dbText:setFillColor( 0.7,0.7,0 ) 
    else myData.dbText:setFillColor( 0.7,0,0 ) end

    -- Close
    myData.closeBtn = display.newImageRect( "img/x.png",iconSize/2.5,iconSize/2.5 )
    myData.closeBtn.anchorX = 1
    myData.closeBtn.anchorY = 0
    myData.closeBtn.x, myData.closeBtn.y = myData.exploitRect.width+20, myData.exploitRect.y+10

    --  Show HUD    
    group:insert(myData.exploitRect)
    group:insert(myData.webExploit)
    group:insert(myData.appExploit)
    group:insert(myData.dbExploit)
    group:insert(myData.webText)
    group:insert(myData.appText)
    group:insert(myData.dbText)
    group:insert(myData.closeBtn)

    --  Button Listeners
    myData.webExploit:addEventListener("tap", event.params.onWebClick)
    myData.appExploit:addEventListener("tap", event.params.onAppClick)
    myData.dbExploit:addEventListener("tap", event.params.onDbClick)
    myData.closeBtn:addEventListener("tap", close)

end

-- Home Show
function exploitAttackScene:show(event)
    local taskGroup = self.view
    if event.phase == "will" then
        -- Called when the scene is still off screen (but is about to come on screen).
    end

    if event.phase == "did" then
        --      
    end
end
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
--> Listener setup
---------------------------------------------------------------------------------
exploitAttackScene:addEventListener( "create", exploitAttackScene )
exploitAttackScene:addEventListener( "show", exploitAttackScene )
---------------------------------------------------------------------------------

return exploitAttackScene